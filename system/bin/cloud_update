#!/bin/bash

# cloud_update
# Authors: Matt Allbright
# Designed to streamline the process of running git commands and deploying new
# and updated scripts in the SCAN Lab.

# These brackets are required for loading an entire program into memory. In this case
# the program will be overwritten with a newer version whenever the repository is
# cloned.
{
  HOSTNAME=`hostname`

  # Check if git is installed.
  apt -q list installed git

  GITREQ=$?

  # Determines if git is installed, installs if exit code is not 0 (Installed).
  if [ $GITREQ = 0 ]; then

    echo "Git is installed. Proceeding with update."

  else

    echo "Git is required for this setup and will now install in 5 seconds."
    echo "If you do not want to install git, please crash this process (Ctrl-C)."
    wait 5

    ssh root@hope apt-get -y install git

  fi

  echo -en '\n'
  echo "Verifying directory exists..."

  # Checks for proper folder in /opt/cloud
  if [[ -d /opt/cloud/staging ]]; then

    # Cleans folder for git clone (required by git)
    ssh root@hope rm -rf /opt/cloud/staging
    ssh root@hope mkdir /opt/cloud/staging
    wait

    if [[ -d /opt/cloud/scanlab ]]; then
      ssh root@hope rm -rf /opt/cloud/scanlab
      ssh root@hope mkdir -p /opt/cloud/scanlab
      wait
    fi
    if [[ -d /opt/cloud/fsl ]]; then
      ssh root@hope rm -rf /opt/cloud/fsl
      ssh root@hope mkdir -p /opt/cloud/fsl
      wait
    fi
  fi

  # Then clones git repo
  echo "Cloning git!"
  ssh root@hope git clone "git://github.com/zavaro/scanlab" /opt/cloud/scanlab/
  wait
  ssh root@hope git clone "git://github.com/zavaro/fsl_slurm" /opt/cloud/fsl/
  wait

  ssh root@hope mv /opt/cloud/fsl /opt/cloud/staging/fsl
  ssh root@hope mv /opt/cloud/scanlab/* /opt/cloud/staging/
  ssh root@hope rm -rf /opt/cloud/scanlab

  ssh root@hope rm -rf /usr/local/bin/cloud_update
  ssh root@hope cp /opt/cloud/staging/system/bin/cloud_update /usr/local/bin/.

  ssh root@empire rm -rf /usr/local/bin/cloud_update
  ssh root@empire cp /opt/cloud/staging/system/bin/cloud_update /usr/local/bin/.

  ssh root@jedi rm -rf /usr/local/bin/cloud_update
  ssh root@jedi cp /opt/cloud/staging/system/bin/cloud_update /usr/local/bin/.

  ssh root@norman rm -rf /usr/local/bin/cloud_update
  ssh root@norman cp /opt/cloud/staging/system/bin/cloud_update /usr/local/bin/.

  ssh root@wilbur rm -rf /usr/local/bin/cloud_update
  ssh root@wilbur cp /opt/cloud/staging/system/bin/cloud_update /usr/local/bin/.

  ssh root@rufus rm -rf /usr/local/bin/cloud_update
  ssh root@rufus cp /opt/cloud/staging/system/bin/cloud_update /usr/local/bin/.

  ssh root@hyperion rm -rf /usr/local/bin/cloud_update
  ssh root@hyperion cp /opt/cloud/staging/system/bin/cloud_update /usr/local/bin/.

  echo -en '\n'
  echo "Resetting permissions..."

  # Set permissions for all files in /download/
  ssh root@hope chmod -R 755 /opt/cloud/staging/

  # # Runs folder structure copy with relation to hostname
  # if [ -d /opt/cloud/staging/hostnames/$HOSTNAME ]; then
  #
  #   echo "Running hostname-specific processes for $HOSTNAME."
  #   ssh root@$HOSTNAME cp -a /opt/cloud/staging/hostnames/$HOSTNAME/. /opt/cloud/staging/
  #
  # fi

  ### Scanlab specific ###

  echo "All actions completed."

}
